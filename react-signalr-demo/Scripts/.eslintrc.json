{
    "extends": [
        "eslint:recommended",
        "plugin:react/recommended"
    ],
    "plugins": [
        "react"
    ],
    "parserOptions": {
        "ecmaVersion": 6,
        "sourceType": "module",
        "ecmaFeatures": {
            "jsx": true
        }
    },
    "env": {
        "browser": true,
        "mocha": true
    },
    // For an explanation of these rules go here: http://eslint.org/docs/rules/
    // 0: ignore rule
    // 1: issue warning
    // 2: issue error
    //
    // Additionally, the instructions can be stored in the following formats:
    // "rule": ["severity", "option"]
    // "rule": ["severity", {"option-x": "a", "option-y": "b"}]
    // "rule": ["severity", "option-x", "option-y"]
    "rules": {
        // *** SYNTAX RULES ***
        "comma-dangle": ["error", "never"],
        "no-cond-assign": 2,
        // we want this linted but the code also needs to run
        "no-console": 1,
        "no-constant-condition": 2,
        "no-control-regex": 2,
        "no-debugger": 1,
        "no-dupe-args": 2,
        "no-dupe-keys": 2,
        "no-duplicate-case": 2,
        "no-empty": 2,
        "no-empty-character-class": 2,
        "no-ex-assign": 2,
        "no-extra-boolean-cast": 2,
        "no-extra-parens": 0,
        "no-extra-semi": 2,
        "no-func-assign": 2,
        "no-inner-declarations": 2,
        "no-invalid-regexp": 2,
        "no-irregular-whitespace": 2,
        "no-negated-in-lhs": 2,
        "no-obj-calls": 2,
        "no-regex-spaces": 2,
        "no-sparse-arrays": 2,
        "no-unexpected-multiline": 2,
        "no-unreachable": 2,
        "use-isnan": 2,
        "valid-jsdoc": 1,
        "valid-typeof": 2,
        
        // *** BEST PRACTICES ***
        "accessor-pairs": 1,
        "array-callback-return": 2,
        "block-scoped-var": 2,
        // use this to limit the cyclomatic complexity of the app
        //"complexity": 
        "consistent-return": 2,
        "curly": 2,
        "default-case": 2,
        // dictate where newlines should be before/after dots
        "dot-location": 0,
        "dot-notation": 1,
        "eqeqeq": 1,
        "guard-for-in": 1,
        "no-alert": 1,
        "no-caller": 2,
        "no-case-declarations": 0,
        "no-div-regex": 2,
        "no-else-return": 2,
        "no-empty-function": 1,
        "no-eq-null": 2,
        "no-eval": 2,
        "no-extend-native": 1,
        "no-extra-bind": 1,
        "no-extra-label": 2,
        // currently relying on fallthroughs
        "no-fallthrough": 0,
        "no-floating-decimal": 2,
        "no-implicit-coercion": 1,
        "no-implied-eval": 2,
        // this rule does not mesh with modular JS
        "no-implied-globals": 0,
        "no-invalid-this": 0,
        "no-iterator": 1,
        "no-labels": 2,
        "no-lone-blocks": 2,
        "no-loop-func": 1,
        "no-magic-numbers": 0,
        "no-multi-spaces": 2,
        "no-multi-str": 2,
        "no-native-reassign": 2,
        // disallow unassigned usage of the "new"" keyword
        "no-new": 2,
        "no-new-func": 2,
        // disallow object instantiation of primitives
        "no-new-wrappers": 2,
        "no-octal": 2,
        "no-octal-escape": 2,
        "no-param-reassign": 2,
        "no-proto": 2,
        "no-redeclare": 2,
        "no-return-assign": 2,
        "no-script-url": 2,
        "no-self-assign": 2,
        "no-self-compare": 2,
        "no-sequences": 2,
        "no-throw-literal": 2,
        "no-unmodified-loop-condition": 2,
        "no-unused-expressions": 2,
        "no-unused-labels": 2,
        "no-useless-call": 2,
        "no-useless-concat": 2,
        "no-useless-escape": 2,
        "no-void": 2,
        "no-warning-comments": 0,
        "no-with": 2,
        "radix": 2,
        "vars-on-top": 0,
        "wrap-iife": 2,
        "yoda": 2,
        
        // *** VARIABLE NAMING POLICIES ***
        "init-declarations": ["error", "always"],
        "no-catch-shadow": 2,
        "no-delete-var": 2,
        "no-label-var": 2,
        "no-restricted-globals": ["error", "event", "fdescribe"],
        "no-shadow": 2,
        "no-shadow-restricted-names": 2,
        "no-undef": 2,
        // do not initialize a variable as undefined
        "no-undef-init": 2,
        "no-undefined": 0,
        "no-unused-vars": 2,
        "no-use-before-define": 2,
        
        // *** STYLE BEST PRACTICES ***
        // Contains instructions for maintaining consistent coding style
        "array-bracket-spacing": ["warn", "always"],
        "block-spacing": 2,
        "brace-style": 2,
        "camelcase": 2,
        "comma-spacing": [ "error", { "before": false, "after": true } ],
        "comma-style": [ "error", "last" ],
        "computed-property-spacing": 0,
        // capture "this" in variables named "self"
        "consistent-this": ["error", "self"],
        // require files to end with an endline
        "eol-last": 2,
        "func-style": ["error", "declaration", { "allowArrowFunctions": true }],
        // undescriptive names lead to hard-to-read code
        "id-blacklist": ["error", "data", "err", "e", "cb", "callback", "event"],
        // single-letter variable names are horrible
        // use excepted "i" for loop iterations
        "id-length": ["error", {"min": 2, "exceptions": ["i", "_", "$", "x", "y"]}],
        "indent": ["error", 4, {"SwitchCase": 1}],
        "key-spacing": ["error", {
            "singleLine": {
                "beforeColon": false,
                "afterColon": true
            },
            "multiLine": {
                "beforeColon": false,
                "afterColon": true
            }
        }],
        "keyword-spacing": ["error", {"before": true, "after": true}],
        "lines-around-comment": ["error", 
            {
                "beforeBlockComment": true,
                "afterBlockComment": false,
                "beforeLineComment": true,
                "afterLineComment": false,
                "allowBlockStart": true,
                "allowObjectStart": true,
                "allowArrayStart": true,
                "allowArrayEnd": true
            }
        ],
        "max-depth": ["warn", {"max": 4}],
        "max-len": 0,
        "max-nested-callbacks": 2,
        "max-params": 0,
        "max-statements": ["warn", {"max": 20}],
        "max-statements-per-line": ["error", {"max": 1}],
        "new-cap": 2,
        "new-parens": 2,
        "newline-after-var": 2,
        "newline-before-return": 2,
        "newline-per-chained-call": 2,
        "no-array-constructor": 2,
        "no-bitwise": 2,
        "no-continue": 2,
        "no-inline-comments": 0,
        "no-lonely-if": 2,
        "no-mixed-spaces-and-tabs": 2,
        "no-multiple-empty-lines": ["error", {"max": 2}],
        "no-negated-condition": 2,
        "no-nested-ternary": 2,
        "no-new-object": 2,
        "no-plusplus": 2,
        "no-spaced-func": 2,
        "no-ternary": 0,
        "no-trailing-spaces": ["error", {"skipBlankLines": false}],
        // we have no need for dangling underscore naming conventions at this time
        "no-underscore-dangle": 2,
        "no-unneeded-ternary": 2,
        "no-whitespace-before-property": 1,
        "object-curly-spacing": ["error", "always"],
        // presently we have files that use many declarations, we can consider changing later
        "one-var": 0,
        "one-var-declaration-per-line": 1,
        // sometimes "longhand" assignment is desirable
        "operator-assignment": 0,
        "operator-linebreak": ["warn", "after",
            {
                "overrides": 
                {
                    ".": "before"
                }
            }
        ],
        "padded-blocks": ["error", "never"],
        "quote-props": ["error", "as-needed"],
        //"quote-props": 1,
        "quotes": [2, "single", { "avoidEscape": true, "allowTemplateLiterals": true }],
        "require-jsdoc": ["error", 
            {
                "require": 
                {
                    "FunctionDeclaration": true,
                    "ClassDeclaration": true,
                    "MethodDefinition": true
                }
            }
        ],
        "semi": 2,
        "semi-spacing": ["error", {"before": false, "after": true}],
        // change this to force variable declaration to be in alphabetical order
        "sort-vars": 0,
        "space-before-blocks": ["error", {"functions": "always", "keywords": "always", "classes": "always"}],
        "space-before-function-paren": ["error", "never"],
        "space-in-parens": ["error", "never"],
        "space-infix-ops": ["error", {"int32Hint": true}],
        "space-unary-ops": 2,
        "spaced-comment": ["warn", "always",
            {
                "line": {
                    "markers": ["/"],
                    "exceptions": ["-"]
                },
                "block": {
                    "markers": ["*"],
                    "exceptions": []
                }
            }
        ],
        
        // *** ES6 RULES ***
        "arrow-body-style": ["error", "always"],
        "arrow-parens": ["error", "always"],
        "constructor-super": 2,
        "generator-star-spacing": 2,
        "no-class-assign": 2,
        "no-confusing-arrow": 2,
        "no-const-assign": 2,
        "no-dupe-class-members": 2,
        "no-duplicate-imports": 2,
        "no-new-symbol": 2,
        "no-restricted-imports": ["error",
            "assert","buffer","child_process","cluster","crypto","dgram","dns","domain",
            "events","freelist","fs","http","https","module","net","os","path","punycode",
            "querystring","readline","repl","smalloc","stream","string_decoder","sys","timers",
            "tls","tracing","tty","url","util","vm","zlib"
        ],
        "no-this-before-super": 2,
        "no-useless-constructor": 2,
        "no-var": 2,
        "object-shorthand": ["error", "always"],
        "prefer-arrow-callback": 2,
        "prefer-const": 2,
        "prefer-reflect": 2,
        "prefer-rest-params": 2,
        "prefer-spread": 2,
        "prefer-template": 2,
        "require-yield": 2,
        // TODO: implement this rule and set to 2
        "sort-imports": 2,
        "template-curly-spacing": ["error", "always"],
        "yield-star-spacing": 2,
        
        // *** JSX RULES ***
        // we are using dangerous HTML but it always comes from the server
        "react/no-danger": 0,
        // jsx-specific rules
        "jsx-quotes": ["error", "prefer-double"]
    }
}